name: K8s E2E Test Pipeline

on:
  push:
    branches:
      - main

jobs:
  e2e-test:
    runs-on: self-hosted
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Minikube and kubectl
        run: |
          # Set -e: Exit immediately if a command exits with a non-zero status.
          # Set -u: Treat unset variables as an error.
          # Set -x: Print commands and their arguments as they are executed.
          # Set -o pipefail: The return value of a pipeline is the status of the last command to exit with a non-zero status.
          set -euxo pipefail

          # Install Minikube
          echo "Downloading Minikube..."
          curl -LO https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64
          echo "Moving Minikube to /usr/local/bin and making it executable..."
          sudo mv minikube-linux-amd64 /usr/local/bin/minikube
          sudo chmod +x /usr/local/bin/minikube

          # Install kubectl
          echo "Downloading kubectl..."
          curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
          echo "Moving kubectl to /usr/local/bin and making it executable..."
          sudo mv kubectl /usr/local/bin/kubectl
          sudo chmod +x /usr/local/bin/kubectl

          # Verify installations
          echo "Verifying Minikube and kubectl installations..."
          ls -l /usr/local/bin/minikube
          file /usr/local/bin/minikube
          minikube version

          ls -l /usr/local/bin/kubectl
          file /usr/local/bin/kubectl
          kubectl version --client

      - name: Setup K8s Environment (Minikube & Deploy Apps)
        run: |
          #!/bin/bash
          minikube delete || true # Ensure it doesn't fail if no cluster exists
          minikube start --driver=docker # Specify driver for CI environments
          eval $(minikube docker-env)
          make # Ensure your Makefile is available and configured for CI

          sleep 10

          kubectl create ns observability || true
          kubectl create ns kafka || true
          kubectl create ns datalake || true

          kubectl apply -f https://github.com/cert-manager/cert-manager/releases/download/v1.12.2/cert-manager.yaml

          sleep 40 # Consider using kubectl wait for more robustness

          echo "Applying datalake application manifests..."
          kubectl apply -n datalake -f https://github.com/razvanmarinn/datalake/k8s/plain-yaml/

          echo "Setup complete!"
        env:
          KUBECONFIG: ~/.kube/config

      # - name: Run E2E Tests
      #   run: |

      - name: Teardown Minikube Cluster
        if: always()
        run: minikube delete
