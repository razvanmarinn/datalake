// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        v5.29.3
// source: ingestion.proto

package protobuf

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// AvroBatchRequest contains Avro batch data for storage
type AvroBatchRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BatchId       string                 `protobuf:"bytes,1,opt,name=batch_id,json=batchId,proto3" json:"batch_id,omitempty"`    // Unique identifier for the Avro batch
	AvroData      []byte                 `protobuf:"bytes,2,opt,name=avro_data,json=avroData,proto3" json:"avro_data,omitempty"` // Avro-encoded batch data
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AvroBatchRequest) Reset() {
	*x = AvroBatchRequest{}
	mi := &file_ingestion_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AvroBatchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AvroBatchRequest) ProtoMessage() {}

func (x *AvroBatchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ingestion_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AvroBatchRequest.ProtoReflect.Descriptor instead.
func (*AvroBatchRequest) Descriptor() ([]byte, []int) {
	return file_ingestion_proto_rawDescGZIP(), []int{0}
}

func (x *AvroBatchRequest) GetBatchId() string {
	if x != nil {
		return x.BatchId
	}
	return ""
}

func (x *AvroBatchRequest) GetAvroData() []byte {
	if x != nil {
		return x.AvroData
	}
	return nil
}

var File_ingestion_proto protoreflect.FileDescriptor

var file_ingestion_proto_rawDesc = string([]byte{
	0x0a, 0x0f, 0x69, 0x6e, 0x67, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x12, 0x69, 0x6e, 0x67, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x6f, 0x6e,
	0x73, 0x75, 0x6d, 0x65, 0x72, 0x1a, 0x0c, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0x4a, 0x0a, 0x10, 0x41, 0x76, 0x72, 0x6f, 0x42, 0x61, 0x74, 0x63, 0x68,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x62, 0x61, 0x74, 0x63, 0x68,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x62, 0x61, 0x74, 0x63, 0x68,
	0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x61, 0x76, 0x72, 0x6f, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x61, 0x76, 0x72, 0x6f, 0x44, 0x61, 0x74, 0x61, 0x32,
	0x61, 0x0a, 0x0d, 0x57, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x12, 0x50, 0x0a, 0x0e, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x42, 0x61, 0x74, 0x63, 0x68, 0x41, 0x76,
	0x72, 0x6f, 0x12, 0x24, 0x2e, 0x69, 0x6e, 0x67, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x63,
	0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x72, 0x2e, 0x41, 0x76, 0x72, 0x6f, 0x42, 0x61, 0x74, 0x63,
	0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x42, 0x2b, 0x5a, 0x29, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2f, 0x72, 0x61, 0x7a, 0x76, 0x61, 0x6e, 0x6d, 0x61, 0x72, 0x69, 0x6e, 0x6e, 0x2f, 0x64, 0x61,
	0x74, 0x61, 0x6c, 0x61, 0x6b, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_ingestion_proto_rawDescOnce sync.Once
	file_ingestion_proto_rawDescData []byte
)

func file_ingestion_proto_rawDescGZIP() []byte {
	file_ingestion_proto_rawDescOnce.Do(func() {
		file_ingestion_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_ingestion_proto_rawDesc), len(file_ingestion_proto_rawDesc)))
	})
	return file_ingestion_proto_rawDescData
}

var file_ingestion_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_ingestion_proto_goTypes = []any{
	(*AvroBatchRequest)(nil), // 0: ingestion_consumer.AvroBatchRequest
	(*WorkerResponse)(nil),   // 1: common.WorkerResponse
}
var file_ingestion_proto_depIdxs = []int32{
	0, // 0: ingestion_consumer.WorkerService.StoreBatchAvro:input_type -> ingestion_consumer.AvroBatchRequest
	1, // 1: ingestion_consumer.WorkerService.StoreBatchAvro:output_type -> common.WorkerResponse
	1, // [1:2] is the sub-list for method output_type
	0, // [0:1] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_ingestion_proto_init() }
func file_ingestion_proto_init() {
	if File_ingestion_proto != nil {
		return
	}
	file_common_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_ingestion_proto_rawDesc), len(file_ingestion_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_ingestion_proto_goTypes,
		DependencyIndexes: file_ingestion_proto_depIdxs,
		MessageInfos:      file_ingestion_proto_msgTypes,
	}.Build()
	File_ingestion_proto = out.File
	file_ingestion_proto_goTypes = nil
	file_ingestion_proto_depIdxs = nil
}
